/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.github.stanleyseow;

public class rf24bcmjavaJNI {
  public final static native int RF24_PA_MIN_get();
  public final static native int RF24_1MBPS_get();
  public final static native int RF24_CRC_DISABLED_get();
  public final static native long new_RF24__SWIG_0(short jarg1, short jarg2);
  public final static native long new_RF24__SWIG_1(short jarg1, short jarg2, long jarg3);
  public final static native boolean RF24_begin(long jarg1, RF24 jarg1_);
  public final static native void RF24_startListening(long jarg1, RF24 jarg1_);
  public final static native void RF24_stopListening(long jarg1, RF24 jarg1_);
  public final static native boolean RF24_write__SWIG_0(long jarg1, RF24 jarg1_, byte[] jarg2, short jarg3);
  public final static native boolean RF24_available__SWIG_0(long jarg1, RF24 jarg1_);
  public final static native void RF24_read(long jarg1, RF24 jarg1_, byte[] jarg2, short jarg3);
  public final static native void RF24_openWritingPipe__SWIG_0(long jarg1, RF24 jarg1_, byte[] jarg2);
  public final static native void RF24_openReadingPipe__SWIG_0(long jarg1, RF24 jarg1_, short jarg2, byte[] jarg3);
  public final static native short RF24_flush_tx(long jarg1, RF24 jarg1_);
  public final static native void RF24_setRetries(long jarg1, RF24 jarg1_, short jarg2, short jarg3);
  public final static native void RF24_setChannel(long jarg1, RF24 jarg1_, short jarg2);
  public final static native void RF24_setPayloadSize(long jarg1, RF24 jarg1_, short jarg2);
  public final static native short RF24_getPayloadSize(long jarg1, RF24 jarg1_);
  public final static native short RF24_getDynamicPayloadSize(long jarg1, RF24 jarg1_);
  public final static native void RF24_enableAckPayload(long jarg1, RF24 jarg1_);
  public final static native void RF24_enableDynamicPayloads(long jarg1, RF24 jarg1_);
  public final static native void RF24_enableDynamicAck(long jarg1, RF24 jarg1_);
  public final static native boolean RF24_isPVariant(long jarg1, RF24 jarg1_);
  public final static native void RF24_setAutoAck__SWIG_0(long jarg1, RF24 jarg1_, boolean jarg2);
  public final static native void RF24_setAutoAck__SWIG_1(long jarg1, RF24 jarg1_, short jarg2, boolean jarg3);
  public final static native void RF24_setPALevel(long jarg1, RF24 jarg1_, short jarg2);
  public final static native short RF24_getPALevel(long jarg1, RF24 jarg1_);
  public final static native boolean RF24_setDataRate(long jarg1, RF24 jarg1_, int jarg2);
  public final static native int RF24_getDataRate(long jarg1, RF24 jarg1_);
  public final static native void RF24_setCRCLength(long jarg1, RF24 jarg1_, int jarg2);
  public final static native int RF24_getCRCLength(long jarg1, RF24 jarg1_);
  public final static native void RF24_disableCRC(long jarg1, RF24 jarg1_);
  public final static native void RF24_openWritingPipe__SWIG_1(long jarg1, RF24 jarg1_, java.math.BigInteger jarg2);
  public final static native void RF24_openReadingPipe__SWIG_1(long jarg1, RF24 jarg1_, short jarg2, java.math.BigInteger jarg3);
  public final static native void RF24_printDetails(long jarg1, RF24 jarg1_);
  public final static native void RF24_powerDown(long jarg1, RF24 jarg1_);
  public final static native void RF24_powerUp(long jarg1, RF24 jarg1_);
  public final static native boolean RF24_write__SWIG_1(long jarg1, RF24 jarg1_, byte[] jarg2, short jarg3, boolean jarg4);
  public final static native boolean RF24_writeFast__SWIG_0(long jarg1, RF24 jarg1_, byte[] jarg2, short jarg3);
  public final static native boolean RF24_writeFast__SWIG_1(long jarg1, RF24 jarg1_, byte[] jarg2, short jarg3, boolean jarg4);
  public final static native boolean RF24_writeBlocking(long jarg1, RF24 jarg1_, byte[] jarg2, short jarg3, long jarg4);
  public final static native boolean RF24_txStandBy__SWIG_0(long jarg1, RF24 jarg1_);
  public final static native boolean RF24_txStandBy__SWIG_1(long jarg1, RF24 jarg1_, long jarg2);
  public final static native boolean RF24_available__SWIG_1(long jarg1, RF24 jarg1_, short[] jarg2);
  public final static native void RF24_startFastWrite(long jarg1, RF24 jarg1_, byte[] jarg2, short jarg3, boolean jarg4);
  public final static native void RF24_startWrite(long jarg1, RF24 jarg1_, byte[] jarg2, short jarg3, boolean jarg4);
  public final static native void RF24_reUseTX(long jarg1, RF24 jarg1_);
  public final static native void RF24_writeAckPayload(long jarg1, RF24 jarg1_, short jarg2, byte[] jarg3, short jarg4);
  public final static native boolean RF24_isAckPayloadAvailable(long jarg1, RF24 jarg1_);
  public final static native void RF24_whatHappened(long jarg1, RF24 jarg1_, boolean[] jarg2, boolean[] jarg3, boolean[] jarg4);
  public final static native boolean RF24_testCarrier(long jarg1, RF24 jarg1_);
  public final static native boolean RF24_testRPD(long jarg1, RF24 jarg1_);
  public final static native boolean RF24_isValid(long jarg1, RF24 jarg1_);
  public final static native void RF24_maskIRQ(long jarg1, RF24 jarg1_, boolean jarg2, boolean jarg3, boolean jarg4);
  public final static native void RF24_setAddressWidth(long jarg1, RF24 jarg1_, short jarg2);
  public final static native void delete_RF24(long jarg1);
}
